<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>room_generator_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Fails = 0;

Grid = 5;

Width = room_width &gt;&gt; Grid;
Height = room_height &gt;&gt; Grid;

for(var X = 0; X &lt; Width; X++)
{
    for(var Y = 0; Y &lt; Height; Y++)
    {
        Free[X, Y] = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(100, 100, player_obj);

instance_create(0, 0, camera_obj);
instance_create(0, 0, manager_obj);
instance_create(0, 0, ticker);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Fails &gt; 10)
{
    instance_destroy();
    exit;
}

var Index = irandom(ds_list_size(global.building_catalouge_accessors) - 1);

var Room = global.building_catalouge_accessors[| Index];

var Spawn = global.building_catalouge[? Room];

if(is_undefined(Spawn))
{
    exit;
}

var SpawnHeight = Spawn[? CAT_ROOM_HEIGHT] &gt;&gt; Grid;

if(SpawnHeight &gt; Height)
{
    exit;
}

var SpawnWidth = Spawn[? CAT_ROOM_WIDTH] &gt;&gt; Grid;

if(SpawnWidth &gt; Width)
{
    exit;
}

var SpawnX = irandom(Width - SpawnWidth);
var SpawnY = irandom(Height - SpawnHeight);

for(var X = 0; X &lt; SpawnWidth; X++)
{
    for(var Y = 0; Y &lt; SpawnHeight; Y++)
    {
        if(!Free[SpawnX + X, SpawnY + Y])
        {
            Fails++;
            exit;
        }
    }
}

catalouge_build_instances(Room, SpawnX &lt;&lt; Grid, SpawnY &lt;&lt; Grid);

Fails--;

var Border = 1 + irandom(2);

SpawnHeight += Border;
SpawnWidth += Border;

for(var X = -Border; X &lt; SpawnWidth; X++)
{
    if(SpawnX + X &lt; 0)
    {
        continue;
    }
    
    if(SpawnX + X &gt;= Width)
    {
        continue;
    }

    for(var Y = -Border; Y &lt; SpawnHeight; Y++)
    {
        if(SpawnY + Y &lt; 0)
        {
            continue;
        }
        
        if(SpawnY + Y &gt;= Height)
        {
            continue;
        }

        Free[SpawnX + X, SpawnY + Y] = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_set_color(c_black);
draw_rectangle(0, 0, window_get_width(), window_get_height(), 0);

draw_set_color(c_white);
draw_text(16, 16, "Generating Level...");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
