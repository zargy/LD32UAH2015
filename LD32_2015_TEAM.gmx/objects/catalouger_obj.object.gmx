<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.building_catalouge = ds_map_create();

//Room Loading
loaded = false;

//0 = transitioning between rooms
//1 = Waiting for a room to load fully
//2 = Catalouging process
//3 = process done
loadPhase = 0;
timer = 0;
roomIndex = 0;
roomDone = false;

global.building_catalouge_accessors = ds_list_create();

// ADD YOUR ROOMS TO HERE!

// Wolfenhex

ds_list_add(global.building_catalouge_accessors, wolfenhex_test);
ds_list_add(global.building_catalouge_accessors, wolfenhex_test_2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !loaded
{
    switch loadPhase
    {
        case 0:
        {
            if roomIndex &lt; ds_list_size(global.building_catalouge_accessors)
            {
                var ri = global.building_catalouge_accessors[|roomIndex];

                if room_exists(ri)
                {
                    room_goto(ri);
                    loadPhase = 1;
                    timer = 10;
                }
            }
            else
            {
                loadPhase = 3;
            }
        }
        break;
        
        case 1:
        {
            if timer &gt; 0 
                timer--
            else
            {
                loadPhase = 2;
            }
        }
        break;
        
        case 2:
        {
            //Catalouge Room
            var instances = room_catalouge_instances();
            var tiles = room_catalouge_tiles();
            
            var rm = ds_map_create();
            rm[? CAT_INSTANCES] = instances;
            rm[? CAT_TILES] = tiles;
            rm[? CAT_ROOM_WIDTH] = room_width;
            rm[? CAT_ROOM_HEIGHT] = room_height;
            
            ds_map_add_map(global.building_catalouge,room,rm);
            
            
            roomIndex += 1;
            loadPhase = 0;
        }
        break;
        
        case 3:
        {
            loaded = true;
            room_goto(start_up);
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !loaded
{
    draw_set_color(c_black);
    draw_rectangle(0,0,window_get_width(),window_get_height(),0);

    draw_set_color(c_white);
    draw_text(16,16, "Loading...");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
